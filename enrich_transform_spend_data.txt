let
    //==============================================================\\
    // Load and Transform Source Data
    //==============================================================\\
    Source = Csv.Document(
        File.Contents("C:\Users\scomorga\OneDrive - Microsoft\Business Intelligence\Category Planning\Category Plan Sheets Prep\FY25\Source_Data\final\AIC_Spend_Data.csv"),
        [Delimiter = ",", Columns = 53, Encoding = 1252, QuoteStyle = QuoteStyle.None]
    ),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars = true]),
    #"Changed Type" = Table.TransformColumnTypes(
        #"Promoted Headers",
        {
            {"Financial Year", type text},
            {"Supplier Number", Int64.Type},
            {"Supplier Name", type text},
            {"Normalized Supplier", type text},
            {"Supplier Type", type text},
            {"Primary Category", type text},
            {"Category 1", type text},
            {"Category 2", type text},
            {"Category 3", type text},
            {"PO Number", type any},
            {"Managed Status", type text},
            {"Executive", type text},
            {"Cost Center", type number},
            {"Cost Center Description", type text},
            {"Addressable", type text},
            {"Pass-Thru Flag", type text},
            {"Sourcing Category Director", type text},
            {"Number of Contracts", Int64.Type},
            {"With Contract", type text},
            {"Diversity", type text},
            {"Segment", type text},
            {"Company Region", type text},
            {"Supplier Region", type text},
            {"Spend", Int64.Type},
            {"Category Manager", type text},
            {"Category Team", type text},
            {"New?", type text},
            {"Diversity Classification", type text},
            {"Government Classification", type text},
            {"Reporting Year", Int64.Type},
            {"Spend HQ Category", type text},
            {"Spend HQ SubCategory", type text},
            {"Preferred Supplier", type text},
            {"Financial Period", Int64.Type},
            {"Month/Year When New", type date},
            {"Reporting Month", type text},
            {"Taxonomy Compliant?", type text},
            {"Account", Int64.Type},
            {"Account Description", type text},
            {"Assigned Supplier Owner", type text},
            {"Baseline Segment/Managed Spend Type", type text}
        }
    ),

    //==============================================================\\
    // Add Reporting Date
    //==============================================================\\
    #"Added 'Reporting Date'" = Table.AddColumn(
        #"Changed Type",
        "Reporting Date",
        each if [Reporting Year] = null or [Financial Period] = null then null
        else 
            Date.EndOfMonth(
                #date(
                    Number.From([Reporting Year]),
                    if [Financial Period] + 6 > 12 then [Financial Period] - 6 else [Financial Period] + 6,
                    1
                )
            )
    ),
    #"Changed Type1" = Table.TransformColumnTypes(#"Added 'Reporting Date'", {{"Reporting Date", type date}}),

    //==============================================================\\
    // Remap Managed Status
    //==============================================================\\
    #"Remap Managed Status by Supplier" = Table.AddColumn(
        #"Changed Type1",
        "Managed Status (Temp1)",
        each 
            if [Normalized Supplier] = "LINKEDIN" then "Managed by GSS"
            else if [Normalized Supplier] = "TRINUS" then "Managed by GSS"
            else if [Normalized Supplier] = "GRANITE MANAGEMENT SERVICES" then "Not Managed By GSS or IBE"
            else if [Normalized Supplier] = "WILLIS TOWERS WATSON" then "Not Managed by GSS or IBE"
            else if [Normalized Supplier] = "NSIGHT INC" then "Not Managed by GSS or IBE"
            else if [Category 1] = "Human Resources" 
                and List.Contains({"HR Services", "Training and Development"}, [Category 2]) 
                and [Managed Status] = "Out of scope for GSS or IBE" then "Non-Managed by GSS or IBE"
            else if [Category 1] = "Meetings & Events " 
                and [Category 2] = "External Events" 
                and [Managed Status] = "Out of scope for GSS or IBE" then "Non-Managed by GSS or IBE"
            else [Managed Status] // fallback
    ),
    #"Removed Old Managed Status" = Table.RemoveColumns(#"Remap Managed Status by Supplier", {"Managed Status"}),
    #"Renamed Managed Status (Temp1)" = Table.RenameColumns(#"Removed Old Managed Status", {{"Managed Status (Temp1)", "Managed Status"}}),

    //==============================================================\\
    // Addressable Overrides
    //==============================================================\\
    #"Remap Addressable" = Table.AddColumn(
        #"Renamed Managed Status (Temp1)",
        "Addressable (Temp)",
        each 
            if [Category 1] = "Workplace" and [Category 2] = "Occupancy" and [Category 3] = "Gas & Electric"
               and [Addressable] = "Addressable"
               and [Managed Status] = "Out of scope for GSS or IBE"
            then "Non-Addressable"
            else if [Normalized Supplier] = {"CARPINTERIA CITY OF", "COMPTROLLER OF MARYLAND-UNCLAIMED PROPERTY", 
                                              "COLORADO TREASURYâ€™S UNCLAIMED PROPERTY DIVISION", 
                                              "LOUISIANA DEPT OF TREASURY", "DELAWARE STATE OF"}
            then "Non-Addressable"
            else [Addressable]
    ),
    #"Removed Old Addressable" = Table.RemoveColumns(#"Remap Addressable", {"Addressable"}),
    #"Renamed Addressable (Temp)" = Table.RenameColumns(#"Removed Old Addressable", {{"Addressable (Temp)", "Addressable"}}),

    //==============================================================\\
    // Remap Normalized Supplier
    //==============================================================\\
    #"Remap Normalized Supplier" = Table.AddColumn(
        #"Renamed Addressable (Temp)",
        "Normalized Supplier (Temp)",
        each
            if [Normalized Supplier] = "Advito" then "BCD Travel"
            else if [Normalized Supplier] = "Pluxee" then "Sodexo"
            else if [Normalized Supplier] = "Workforce Logiq" then "MAGNIT"
            else [Normalized Supplier] // fallback
    ),
    #"Removed Old Normalized Supplier" = Table.RemoveColumns(#"Remap Normalized Supplier", {"Normalized Supplier"}),
    #"Renamed Normalized Supplier (Temp)" = Table.RenameColumns(#"Removed Old Normalized Supplier", {{"Normalized Supplier (Temp)", "Normalized Supplier"}}),

    //==============================================================\\
    // Combine LinkedIn Employee with American Express
    //==============================================================\\
    #"Combine LinkedIn Employee and American Express" = Table.AddColumn(
        #"Renamed Normalized Supplier (Temp)",
        "Supplier Adjustment (Temp)",
        each
            if [Normalized Supplier] = "LINKEDIN EMPLOYEE" 
               and [Supplier Name] = "LinkedIn Employee" 
               and [Category 1] = "Travel Partners" 
               and [Category 2] = "Travel Management & Support Companies" 
               and [Category 3] = null 
            then "AMERICAN EXPRESS"
            else [Normalized Supplier]
    ),
    #"Removed Temporary Adjustment" = Table.RemoveColumns(#"Combine LinkedIn Employee and American Express", {"Normalized Supplier"}),
    #"Renamed Supplier Adjustment" = Table.RenameColumns(#"Removed Temporary Adjustment", {{"Supplier Adjustment (Temp)", "Normalized Supplier"}}),

    //==============================================================\\
    // Final Adjustments and Output
    //==============================================================\\
    #"Merged Supplier-Segment" = Table.NestedJoin(
        #"Renamed Supplier Adjustment",
        {"Normalized Supplier"},
        SupplierSegmentMapping,
        {"Normalized Supplier"},
        "SegmentMapping",
        JoinKind.LeftOuter
    ),
    #"Expanded Segment" = Table.ExpandTableColumn(
        #"Merged Supplier-Segment",
        "SegmentMapping",
        {"Segment"},
        {"New Segment"}
    ),
    #"Apply New Segment" = Table.AddColumn(
        #"Expanded Segment",
        "Segment (Temp)",
        each if [New Segment] <> null then [New Segment] else "Tactical"
    ),
    #"Removed Old Segment" = Table.RemoveColumns(#"Apply New Segment", {"Segment", "New Segment"}),
    #"Renamed Segment Column" = Table.RenameColumns(#"Removed Old Segment", {{"Segment (Temp)", "Segment"}})

in
    #"Renamed Segment Column"